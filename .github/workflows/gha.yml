name: CPP
# It runs default OSes for each PR, push event or a new tag,
# checks basic builds with various compilers and executes all sets of tests.

on:
  push:
  pull_request:
  release:
    types:
      - created

env:
  REPO:           libpmemobj-cpp
  GITHUB_REPO:    pmem/libpmemobj-cpp
  CONTAINER_REG:  ghcr.io/pmem/libpmemobj-cpp
  HOST_WORKDIR:   ${{ github.workspace }}
  TEST_TIMEOUT:   800
  IMG_VER:        latest

jobs:
  windows:
    name: Windows
    runs-on: windows-latest

    env:
      platform: x64
      VCPKG_DEFAULT_TRIPLET: x64-windows
      GENERATOR: "Visual Studio 16 2019"
      ARCH:      "x64"
      PMDK_VERSION: "1.9"
      CMAKE_TOOLCHAIN_FILE: "C:\\vcpkg\\scripts\\buildsystems\\vcpkg.cmake"
      CMAKE_INSTALL_PREFIX: "C:\\install\\libpmemobj-cpp"
    strategy:
      matrix:
        BUILD_TYPE:   [Debug, Release]
        CXX_STANDARD: [14]
        include:
          - BUILD_TYPE:   RelWithDebInfo
            CXX_STANDARD: 17

    steps:
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: ${env:ARCH}

      - name: Cache vcpkg packages
        uses: actions/cache@v1
        id: cache-vcpkg-packages
        with:
          path: C:/vcpkg/packages
          key:  vcpkg-packages-45e5a67

      - name: Cache vcpkg installed
        uses: actions/cache@v1
        id: cache-vcpkg-installed
        with:
          path: C:/vcpkg/installed
          key:  vcpkg-installed-45e5a67

      - name: Clone the git repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install PMDK
        run: |
          vcpkg install pmdk:x64-windows
          vcpkg install sfml:x64-windows
          vcpkg install tbb:x64-windows
          vcpkg update
          vcpkg upgrade pmdk:x64-windows --no-dry-run

      - name: vcpkg integrate install
        run: vcpkg integrate install

      - name: Configure
        run: cmake . -Bbuild
                    -G "${env:GENERATOR}"
                    -A "${env:ARCH}"
                    -DCMAKE_BUILD_TYPE="${{ matrix.BUILD_TYPE }}"
                    -DCMAKE_TOOLCHAIN_FILE="${env:CMAKE_TOOLCHAIN_FILE}"
                    -DCMAKE_INSTALL_PREFIX="${env:CMAKE_INSTALL_PREFIX}"
                    -DTESTS_USE_FORCED_PMEM=ON
                    -DTESTS_USE_VALGRIND=OFF
                    -DTESTS_TBB=ON
                    -DDEVELOPER_MODE=ON
                    -DCXX_STANDARD="${{ matrix.CXX_STANDARD }}"

      - name: Build
        run: msbuild build/ALL_BUILD.vcxproj /property:Configuration=${{ matrix.BUILD_TYPE }} /verbosity:minimal /m

      - name: Tests
        working-directory: build
        run: ctest -C ${{ matrix.BUILD_TYPE }} --output-on-failure --timeout "${env:TEST_TIMEOUT}"

      - name: Install
        working-directory: build
        run: msbuild INSTALL.vcxproj /verbosity:minimal /m

      - name: Examples
        working-directory: examples/map_cli
        run: |
          cmake . -G "${env:GENERATOR}" -A "${env:ARCH}" -DCMAKE_TOOLCHAIN_FILE="${env:CMAKE_TOOLCHAIN_FILE}" -DCMAKE_PREFIX_PATH="${env:CMAKE_INSTALL_PREFIX}"
          msbuild ALL_BUILD.vcxproj /verbosity:minimal /m
